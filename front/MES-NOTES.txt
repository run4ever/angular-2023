https://github.com/jlg-formation/agu-mars-2023

ne jamais installer angular ni npm en global
pour que chaque projet ait sa propre version
et éviter les conflits de version

npx ng g m <mon-module> --dry-run
npx ng g m layout -m app
-m indique qu'on va l'ajouter comme import dans app

npx ng g c <path>/<mon-comsant> --export --dry-run
export = equivalent de public

npx ng g c routes/home --dry-run

pas besoin d'export pour les composants de route


raccourci lorem10 : texte bidon avec 10 mentions
a.button => a href class button

//Lazy loading (télécharge ces parties qd l'utilisateur clique dessus)
//pour créer un module avec son url et qui sera isolé dans un bundle et donc avec son routing independant
//cf difference dans app-routing au niveau des Routes
//pour tester, aller sur page d'accueil, couper le réseau dans F12 (Offline au lieu de No throttling) et cliquer sur le bouton stock, ca plante
npx ng g m stock --route stock -m app --dry-run
npx ng g m stock --route stock -m app

//optimisation pour lui faire télécharger en tache de fond et non pas au clic:
preloadingStrategy: PreloadAllModules

//creation du composant add stock
npx ng g c stock/add
//puis routing dans stock-routing module

type="submit" : inutile car valeur par defaut

:host {flex: 1;} equivaut à flex-grow, aligne le body en haut en le faisant grossir

//commande pour créer les fichiers js à donner à la prod
npx ng build
